{
    "pipes": [],
    "interfaces": [
        {
            "name": "Currency",
            "id": "interface-Currency-20427f9fc2ecbaa108b0e7296eaf8aa38e9930f369c8cd5a39ddc71531a0d6ed09c87a241be2e6f63f8d1733abd83214530e74348692bf4c9bb719b4538086af",
            "file": "src/app/interfaces/currency.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Currency {\r\n    id: string\r\n    rank: string;\r\n    symbol: string;\r\n    name: string;\r\n    supply: string;\r\n    maxSupply: string;\r\n    marketCapUsd: string;\r\n    volumeUsd24Hr: string;\r\n    priceUsd: string;\r\n    changePercent24Hr: string;\r\n    vwap24Hr: string;\r\n    explorer: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "changePercent24Hr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "explorer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "marketCapUsd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "maxSupply",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "priceUsd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "rank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "supply",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "volumeUsd24Hr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "vwap24Hr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataResponse",
            "id": "interface-DataResponse-807d69a1aec49aa7a2a13d37b0c4c2d914f8f5c7068016bd4e9e4a18db4afdb9892fdeb221b01fd5bde7ed9a1f9ae4f8c6ac0157bc567e72f4e06bc6d482fdba",
            "file": "src/app/interfaces/data-response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataResponse {\r\n    error?: number;\r\n    data: any;\r\n}\r\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "File",
            "id": "interface-File-b81615eb9ce2840721ffe8fea1a0f6b8db36ab370b86de498155201787afb903cee0da01d4cebe54065ac97f59bab15fa14f8b8441c209a8d0ef0bee5d6e8245",
            "file": "src/app/interfaces/file.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface File {\r\n    id?: number;\r\n    name: string;\r\n    device: string;\r\n    path: string;\r\n    status: FileStatus;\r\n}\r\n\r\nexport enum FileStatus {\r\n    Scheduled = \"scheduled\",\r\n    Available = \"available\",\r\n    Unknown = \"unknown\",\r\n}\r\n",
            "properties": [
                {
                    "name": "device",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FileStatus",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "CurrencyService",
            "id": "injectable-CurrencyService-195b4e57cdb412312479a8fe895d21d0a6aa415c4e31b8853a1109f45112a867c44de06dcc30300cc61b3d3f847713a5a11abd60be4b9ca392a4545f9d0cf1dd",
            "file": "src/app/services/currency/currency.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCurrencies",
                    "args": [
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "\"\""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Array<Currency>>",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "searchTerm",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "\"\"",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Currency } from '../../interfaces/currency.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CurrencyService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCurrencies(searchTerm = \"\"): Observable<Array<Currency>> {\r\n    return this.http\r\n      .get<{ data: Currency[] }>(`https://api.coincap.io/v2/assets?search=${searchTerm}`)\r\n      .pipe(map((currencies) => currencies.data || []));\r\n  }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FilesService",
            "id": "injectable-FilesService-77c86e2bb9b75406874dd5635645aa9ff58ef00907823dbf646c1eaecda19c3606c2b176226289405d76393c660f85a6ebc48e43735e7bff19c838cc8e5377b9",
            "file": "src/app/services/files/files.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<File[]>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, Observable } from 'rxjs';\r\nimport { DataResponse } from '../../interfaces/data-response';\r\nimport { File } from '../../interfaces/file';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FilesService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getFiles(): Observable<File[]>\r\n  {\r\n    const url = '/assets/data/files.json';\r\n\r\n    // @TODO: Should have error handling\r\n    return this.http.get<DataResponse>(url).pipe(map((res: DataResponse) => {return res.data}));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-6cae814ffc31bfc56ecc5df1ef20c498918406d11bb8aafd9cdbb2c4a46aab5006800f9975c9b07eb465e1b599aec6399f4bb58d43e374f8fc1b1935f89a3d33",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html',\r\n})\r\nexport class AppComponent {\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<style>\r\n  .content {\r\n    display: flex;\r\n    margin: 82px auto 32px;\r\n    padding: 0 16px;\r\n    max-width: 960px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .toolbar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 60px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #1976d2;\r\n    color: white;\r\n    font-weight: 600;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  footer {\r\n    margin-top: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    line-height: 20px;\r\n  }\r\n\r\n  img#clouds {\r\n    position: fixed;\r\n    bottom: -160px;\r\n    left: -230px;\r\n    z-index: -10;\r\n    width: 1920px;\r\n  }\r\n</style>\r\n\r\n<div class=\"content\">\r\n  <div class=\"toolbar\" role=\"banner\">\r\n      <h1>Homework Web Site</h1>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n  <footer></footer>\r\n\r\n  <img id=\"clouds\" src=\"assets/svgs/clouds.svg\" alt=\"\" />\r\n</div>\r\n\r\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-61175254144b00d5c0bac2565c4f029ababb972d914a3de364473c8c5388eb5d620e729248db0667eff794ca2a439faeffcc5f097ee7dfb43404ebbfc64af136",
            "file": "src/app/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "home-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "MultiCheckboxState",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "stateChanged",
                    "defaultValue": "new EventEmitter<MultiCheckboxState>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFires when the state of the checkbox is changed\n\n",
                    "description": "<p>Fires when the state of the checkbox is changed</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 618,
                                "end": 625,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": "void"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MultiCheckboxState } from './checkbox.model';\r\n\r\n@Component({\r\n  selector: 'home-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n  @Input() state!: MultiCheckboxState;\r\n  @Output() stateChanged = new EventEmitter<MultiCheckboxState>();\r\n\r\n  ngOnInit() {\r\n    if (this.state == null) {\r\n      this.state = MultiCheckboxState.Empty;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fires when the state of the checkbox is changed\r\n   *\r\n   * @returns {void}\r\n   * @memberof CheckboxComponent\r\n   */\r\n   changeState(): void {\r\n    this.stateChanged.emit(this.state);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/styles.scss';\r\n\r\n:host {\r\n    .full, .partial, .empty {\r\n        cursor: pointer;\r\n        height: 20px;\r\n        width: 20px;\r\n        box-shadow: 0 2px 4px 0 rgba(173,181,189,0.23);\r\n        border-radius: 50%;\r\n    }\r\n\r\n    .full {\r\n        background: $app-color-primary;\r\n    }\r\n\r\n    .partial {\r\n        border-width: 3px;\r\n        border-color: $app-color-primary;\r\n        border-style: solid;\r\n    }\r\n\r\n    .empty {\r\n        border-width: 3px;\r\n        border-color: gray;\r\n        border-style: solid;\r\n    }\r\n}",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [class]=\"state\" (click)=\"changeState()\"></div>"
        },
        {
            "name": "CryptoComponent",
            "id": "component-CryptoComponent-dfb791e500fb6e71fb02022a12af480f5d2d434c58d5b0207a011705681683d18cf875331f207a03e26df17ff12c40c2da0d835717edc80777de0d06d38a78ed",
            "file": "src/app/pages/crypto/crypto.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "page-crypto",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./crypto.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currencies$",
                    "defaultValue": "this.store.select(selectCurrencies)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "currencyPortfolio$",
                    "defaultValue": "this.store.select(selectCurrencyPortfolio)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdd",
                    "args": [
                        {
                            "name": "currencyId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "currencyId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRemove",
                    "args": [
                        {
                            "name": "currencyId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "currencyId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { selectCurrencyPortfolio, selectCurrencies } from '../../state/currencies.selectors';\r\nimport { CurrencyActions, CurrenciesApiActions } from '../../state/currencies.actions';\r\nimport { CurrencyService } from '../../services/currency/currency.service';\r\n\r\n@Component({\r\n  selector: 'page-crypto',\r\n  templateUrl: './crypto.component.html'\r\n})\r\nexport class CryptoComponent implements OnInit {\r\n    currencies$ = this.store.select(selectCurrencies);\r\n    currencyPortfolio$ = this.store.select(selectCurrencyPortfolio);\r\n\r\n    constructor(private currencyService: CurrencyService, private store: Store) {}\r\n\r\n    onAdd(currencyId: string) {\r\n      this.store.dispatch(CurrencyActions.addCurrency({ currencyId }));\r\n    }\r\n\r\n    onRemove(currencyId: string) {\r\n      this.store.dispatch(CurrencyActions.removeCurrency({ currencyId }));\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.currencyService\r\n        .getCurrencies()\r\n        .subscribe((currencies) =>\r\n          this.store.dispatch(CurrenciesApiActions.retrievedCurrencies({ currencies }))\r\n        );\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "currencyService",
                        "type": "CurrencyService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "currencyService",
                        "type": "CurrencyService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n    <div>Crypto Tracker</div>\r\n\r\n    <h2>Available Cryptocurrencies</h2>\r\n\r\n    <home-crypto-selector [currencies]=\"(currencies$ | async)!\" (add)=\"onAdd($event)\"></home-crypto-selector>\r\n\r\n    <h2>Portfolio</h2>\r\n\r\n    <home-crypto-portfolio [currencies]=\"(currencyPortfolio$ | async)!\" (remove)=\"onRemove($event)\"></home-crypto-portfolio>\r\n</div>"
        },
        {
            "name": "CryptoPortfolioComponent",
            "id": "component-CryptoPortfolioComponent-2d6f461a928af4543ef3597362e227fd77a4982f7ef786e316e95591e09a8cfa8ef6cd04bc07340bd4d3d80b07cf84a18cd4904b0bbdf549c15dfaaaa016c0f1",
            "file": "src/app/pages/crypto/crypto-portfolio/crypto-portfolio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "home-crypto-portfolio",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./crypto-portfolio.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currencies",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "ReadonlyArray<Currency>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "remove",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Currency } from '../../../interfaces/currency.model';\r\n\r\n@Component({\r\n  selector: 'home-crypto-portfolio',\r\n  templateUrl: './crypto-portfolio.component.html',\r\n})\r\nexport class CryptoPortfolioComponent {\r\n  @Input() currencies: ReadonlyArray<Currency> = [];\r\n  @Output() remove = new EventEmitter<string>();\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div *ngFor=\"let currency of currencies\">\r\n  <p>{{currency.id}}</p>\r\n  <button (click)=\"remove.emit(currency.id)\" data-test=\"remove-button\">Remove from portfolio</button>\r\n</div>"
        },
        {
            "name": "CryptoSelectorComponent",
            "id": "component-CryptoSelectorComponent-930a238136d28cd3e93bf619c193b8dc01bc1a83ea7121b4ec349a99762ef1522f2080f1485388a84720cb77320600a814b4aa4305e3c20e422e43f39b3c9338",
            "file": "src/app/pages/crypto/crypto-selector/crypto-selector.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "home-crypto-selector",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./crypto-selector.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currencies",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ReadonlyArray<Currency>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "add",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currencyService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrencyService",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "results",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Currency[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "text",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "addCurrency",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "search",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CurrencyService } from '../../../services/currency/currency.service'\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Currency } from '../../../interfaces/currency.model';\r\n\r\n@Component({\r\n  selector: 'home-crypto-selector',\r\n  templateUrl: './crypto-selector.component.html'\r\n})\r\nexport class CryptoSelectorComponent {\r\n  @Input() currencies: ReadonlyArray<Currency> = [];\r\n  @Output() add = new EventEmitter<string>();\r\n\r\n  text: any = \"\";\r\n  results: Currency[] = [];\r\n  currencyService: CurrencyService;\r\n\r\n  constructor(currencyService: CurrencyService) {\r\n    this.currencyService = currencyService;\r\n   }\r\n\r\n  // NOTE: This is just a demo assignment, probably would make more sense to preload currencies initially and client side filter here. Not like new currencies added real time usually.\r\n  search(event: any) {\r\n    const entityApiCall = this.currencyService.getCurrencies(event.query)\r\n\r\n    entityApiCall.subscribe((response: Currency[]) => {\r\n      this.results = response\r\n    }, (error: any) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  addCurrency(e: any) {\r\n    this.text = \"\"\r\n    this.add.emit(e.id)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "currencyService",
                        "type": "CurrencyService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "currencyService",
                        "type": "CurrencyService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div>\r\n    <div>\r\n        <p-autoComplete\r\n            [(ngModel)]=\"text\" [suggestions]=\"results\"\r\n            (onSelect)=\"addCurrency($event)\"\r\n            (completeMethod)=\"search($event)\" field=\"name\" placeholder=\"Search for a cryptocurrency\">\r\n        </p-autoComplete>\r\n    </div>\r\n</div>"
        },
        {
            "name": "DownloadsComponent",
            "id": "component-DownloadsComponent-d6d289c7eef9f4129281fd6f7402e431efae60961474a23993a24da886070d552c8d41a9e7f7045fd1ea555367e0842d0d0bf58b01a78eb5e1c3c02ae152a3ac",
            "file": "src/app/pages/files/files.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "page-downloads",
            "styleUrls": [
                "./files.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./files.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "files",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "filesService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FilesService",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "fileSubscription",
                    "defaultValue": "new Subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedFiles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "showModal",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "handleDialogDisplay",
                    "args": [
                        {
                            "name": "display",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFires when clicking to display the modal dialog\n\n",
                    "description": "<p>Fires when clicking to display the modal dialog</p>\n",
                    "jsdoctags": [
                        {
                            "name": "display",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1527,
                                "end": 1534,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": "void"
                        }
                    ]
                },
                {
                    "name": "handleSelectionClick",
                    "args": [
                        {
                            "name": "e",
                            "type": "MultiCheckboxState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFires when multistatte checkbox is clicked\n\n",
                    "description": "<p>Fires when multistatte checkbox is clicked</p>\n",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "MultiCheckboxState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1162,
                                "end": 1169,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": "void"
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { FilesService } from '../../services/files/files.service';\r\nimport { File, FileStatus } from '../../interfaces/file';\r\nimport { MultiCheckboxState } from '../../components/checkbox/checkbox.model';\r\n\r\n@Component({\r\n  selector: 'page-downloads',\r\n  templateUrl: './files.component.html',\r\n  styleUrls: ['./files.component.scss']\r\n})\r\nexport class DownloadsComponent implements OnDestroy, OnInit {\r\n  filesService: FilesService;\r\n  files: File[] = [];\r\n  subscriptions: Subscription[] = [];\r\n  selectedFiles: File[] = [];\r\n  fileSubscription: Subscription = new Subscription;\r\n  showModal = false;\r\n\r\n  constructor(filesService: FilesService) {\r\n    this.filesService = filesService;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fileSubscription = this.filesService.getFiles().subscribe(response => {\r\n      this.files = response;\r\n    })\r\n\r\n    this.subscriptions.push(this.fileSubscription);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n\r\n  /**\r\n   * Fires when multistatte checkbox is clicked\r\n   *\r\n   * @returns {void}\r\n   * @memberof DownloadsComponent\r\n   */\r\n  handleSelectionClick(e: MultiCheckboxState): void {\r\n    if (e === MultiCheckboxState.Empty || e === MultiCheckboxState.Partial) {\r\n      this.selectedFiles = this.files;\r\n    } else {\r\n      this.selectedFiles = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fires when clicking to display the modal dialog\r\n   *\r\n   * @returns {void}\r\n   * @memberof DownloadsComponent\r\n   */\r\n  handleDialogDisplay(display: boolean): void {\r\n    this.showModal = display;\r\n  }\r\n\r\n  /**\r\n   * The row selection state of the table\r\n   *\r\n   * @returns {MultiCheckboxState}\r\n   * @memberof DownloadsComponent\r\n   */\r\n  get tableState(): MultiCheckboxState {\r\n    if (this.selectedFiles.length === 0) {\r\n      return MultiCheckboxState.Empty;\r\n    }\r\n\r\n    if (this.selectedFiles.length === this.files.length) {\r\n      return MultiCheckboxState.Full;\r\n    }\r\n\r\n    return MultiCheckboxState.Partial;\r\n  }\r\n\r\n  /**\r\n   * The number of files currently selected\r\n   *\r\n   * @returns {number}\r\n   * @memberof DownloadsComponent\r\n   */\r\n  get selectedFileCount(): number {\r\n    return this.selectedFiles.length;\r\n  }\r\n\r\n  /**\r\n   * The number of files currently selected that are not available\r\n   *\r\n   * @returns {number}\r\n   * @memberof DownloadsComponent\r\n   */\r\n   get selectedUnavailableFileCount(): number {\r\n    return this.selectedFiles.filter(f => f.status !== FileStatus.Available).length;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/overrides.scss';\r\n\r\n:host {\r\n    width: 100%;\r\n\r\n    ::ng-deep .p-datatable-header > div {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        > label {\r\n            margin-left: 1rem;\r\n        }\r\n\r\n        > div.download {\r\n            display: flex;\r\n            justify-content: center;\r\n\r\n            img {\r\n                width: 1rem;\r\n            }\r\n        }\r\n\r\n        > div {\r\n            margin-left: 2rem;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    // @NOTE: Dialog classes, should be kept seperate\r\n    .message {\r\n        font-size: small;\r\n        margin-bottom: 1rem;\r\n    }\r\n\r\n    .notavailable {\r\n        color: $app-color-warning;\r\n        cursor: default !important;\r\n    }\r\n\r\n    .downloads {\r\n        display: grid;\r\n        grid-template-columns: 25% 75%;\r\n        gap: 5px;\r\n\r\n        div {\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./files.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "filesService",
                        "type": "FilesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "filesService",
                        "type": "FilesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy",
                "OnInit"
            ],
            "accessors": {
                "tableState": {
                    "name": "tableState",
                    "getSignature": {
                        "name": "tableState",
                        "type": "",
                        "returnType": "MultiCheckboxState",
                        "line": 66,
                        "rawdescription": "\n\nThe row selection state of the table\n\n",
                        "description": "<p>The row selection state of the table</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 1733,
                                "end": 1769,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 339,
                                "tagName": {
                                    "pos": 1734,
                                    "end": 1741,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "",
                                "typeExpression": {
                                    "pos": 1742,
                                    "end": 1762,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 307,
                                    "type": {
                                        "pos": 1743,
                                        "end": 1761,
                                        "flags": 4194304,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 177,
                                        "typeName": {
                                            "pos": 1743,
                                            "end": 1761,
                                            "flags": 4194304,
                                            "modifierFlagsCache": 0,
                                            "transformFlags": 0,
                                            "kind": 79,
                                            "escapedText": "MultiCheckboxState"
                                        }
                                    }
                                }
                            },
                            {
                                "pos": 1769,
                                "end": 1802,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 325,
                                "tagName": {
                                    "pos": 1770,
                                    "end": 1778,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "memberof"
                                },
                                "comment": "<p>DownloadsComponent</p>\n"
                            }
                        ]
                    }
                },
                "selectedFileCount": {
                    "name": "selectedFileCount",
                    "getSignature": {
                        "name": "selectedFileCount",
                        "type": "number",
                        "returnType": "number",
                        "line": 84,
                        "rawdescription": "\n\nThe number of files currently selected\n\n",
                        "description": "<p>The number of files currently selected</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 2159,
                                "end": 2183,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 339,
                                "tagName": {
                                    "pos": 2160,
                                    "end": 2167,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "",
                                "typeExpression": {
                                    "pos": 2168,
                                    "end": 2176,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 307,
                                    "type": {
                                        "pos": 2169,
                                        "end": 2175,
                                        "flags": 4194304,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 146
                                    }
                                }
                            },
                            {
                                "pos": 2183,
                                "end": 2216,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 325,
                                "tagName": {
                                    "pos": 2184,
                                    "end": 2192,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "memberof"
                                },
                                "comment": "<p>DownloadsComponent</p>\n"
                            }
                        ]
                    }
                },
                "selectedUnavailableFileCount": {
                    "name": "selectedUnavailableFileCount",
                    "getSignature": {
                        "name": "selectedUnavailableFileCount",
                        "type": "number",
                        "returnType": "number",
                        "line": 94,
                        "rawdescription": "\n\nThe number of files currently selected that are not available\n\n",
                        "description": "<p>The number of files currently selected that are not available</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 2389,
                                "end": 2413,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 339,
                                "tagName": {
                                    "pos": 2390,
                                    "end": 2397,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "",
                                "typeExpression": {
                                    "pos": 2398,
                                    "end": 2406,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 307,
                                    "type": {
                                        "pos": 2399,
                                        "end": 2405,
                                        "flags": 4194304,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 146
                                    }
                                }
                            },
                            {
                                "pos": 2413,
                                "end": 2446,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 325,
                                "tagName": {
                                    "pos": 2414,
                                    "end": 2422,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "memberof"
                                },
                                "comment": "<p>DownloadsComponent</p>\n"
                            }
                        ]
                    }
                }
            },
            "templateData": "<div>\r\n    <p-table [value]=\"files\" selectionMode=\"multiple\" [(selection)]=\"selectedFiles\">\r\n        <ng-template pTemplate=\"caption\">\r\n            <div>\r\n                <home-checkbox [state]=\"tableState\" (stateChanged)=\"handleSelectionClick($event)\"></home-checkbox>\r\n                <label *ngIf=\"!selectedFileCount\">None Selected</label>\r\n                <label *ngIf=\"selectedFileCount\">Selected {{ selectedFileCount }}</label>\r\n                <div *ngIf=\"selectedFileCount\" class=\"download\" (click)=\"handleDialogDisplay(true)\"><img src=\"assets/svgs/download.svg\" alt=\"Download selected files\" />Download Selected</div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th></th>\r\n                <th>Name</th>\r\n                <th>Device</th>\r\n                <th>Path</th>\r\n                <th>Status</th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-file>\r\n            <tr [pSelectableRow]=\"file\">\r\n                <td>\r\n                    <p-tableCheckbox [value]=\"file\" (click)=\"$event.stopPropagation()\"></p-tableCheckbox>\r\n                </td>\r\n                <td>\r\n                    {{ file.name }}\r\n                </td>\r\n                <td>\r\n                    {{ file.device }}\r\n                </td>\r\n                <td>\r\n                    {{ file.path }}\r\n                </td>\r\n                <td>\r\n                    <home-status-indicator [status]=file.status></home-status-indicator>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n\r\n    <!-- @TODO: Make a component that wraps this for reusability -->\r\n    <p-dialog header=\"File Downloads\" [(visible)]=\"showModal\" [style]=\"{width: '50vw'}\" [modal]=\"true\" [draggable]=\"false\">\r\n        <!-- BUSINESSRULE: Only those that have a status of \"available\" are currently able to be downloaded. Your implementation should manage this. -->\r\n        <div  *ngIf=\"selectedUnavailableFileCount\" class=\"message\">File(s) in <span class=\"notavailable\">red</span> are not available to be downloaded.</div>\r\n\r\n        <div class=\"downloads\">\r\n            <ng-container *ngFor=\"let file of selectedFiles\">\r\n                <div title=\"{{ file.device }}\" [ngClass]=\"{'notavailable': file.status !== 'available'}\">{{ file.device }}</div>\r\n                <div *ngIf=\"file.status !== 'available'\" title=\"{{ file.path }}\" class=\"notavailable\">{{ file.path }}</div>\r\n                <div *ngIf=\"file.status === 'available'\" title=\"{{ file.path }}\"><a>{{ file.path }}</a></div>\r\n            </ng-container>\r\n        </div>\r\n        <ng-template pTemplate=\"footer\">\r\n            <p-button label=\"Close\" styleClass=\"p-button-text\" (click)=\"handleDialogDisplay(false)\"></p-button>\r\n        </ng-template>\r\n    </p-dialog>\r\n</div>\r\n"
        },
        {
            "name": "StatusIndicatorComponent",
            "id": "component-StatusIndicatorComponent-2a001662d5dc0d45fbcc20ce28c0d2c46fec16f3d655fba159319bbc963254581ff081462c4a927b1b455b106b3dae34ff358492c156f2b9eacebce5f9f3b068",
            "file": "src/app/components/status-indicator/status-indicator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "home-status-indicator",
            "styleUrls": [
                "./status-indicator.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./status-indicator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "status",
                    "defaultValue": "FileStatus.Unknown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FileStatus",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { FileStatus } from '../../interfaces/file';\r\n\r\n@Component({\r\n  selector: 'home-status-indicator',\r\n  templateUrl: './status-indicator.component.html',\r\n  styleUrls: ['./status-indicator.component.scss']\r\n})\r\nexport class StatusIndicatorComponent {\r\n  @Input() status: FileStatus = FileStatus.Unknown;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/styles.scss';\r\n\r\n:host {\r\n    .status-indicator {\r\n        text-transform: capitalize;\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        .indicator {\r\n            min-height: 20px;\r\n            min-width: 20px;\r\n\r\n            &.available {\r\n                background-color: $app-color-status-good;\r\n                border-radius: 50%;\r\n                display: inline-block;\r\n            }\r\n        }\r\n\r\n        label {\r\n            padding-left: 1rem;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./status-indicator.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"status-indicator\">\r\n    <span class=\"indicator\" [ngClass]=\"{'available': status === 'available'}\"></span>\r\n    <label>{{ status }}</label>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-5c019607e064a6639b296724d96ba736704040df86bf0429addebb6099355772ee7c673c94da0c3cd48cd63036c4c4bc6f63dd7ecc7037ec971a3ce05e5bfc79",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { TableModule } from 'primeng/table';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\r\nimport { StatusIndicatorComponent } from './components/status-indicator/status-indicator.component';\r\nimport { CryptoSelectorComponent } from './pages/crypto/crypto-selector/crypto-selector.component';\r\nimport { CryptoPortfolioComponent } from './pages/crypto/crypto-portfolio/crypto-portfolio.component';\r\nimport { CryptoComponent } from './pages/crypto/crypto.component';\r\nimport { DownloadsComponent } from './pages/files/files.component';\r\nimport { currencyReducer } from './state/currencies.reducer';\r\nimport { portfolioReducer } from './state/portfolio.reducer';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CheckboxComponent,\r\n    DownloadsComponent,\r\n    StatusIndicatorComponent,\r\n    CryptoSelectorComponent,\r\n    CryptoPortfolioComponent,\r\n    CryptoComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    ButtonModule,\r\n    DialogModule,\r\n    HttpClientModule,\r\n    TableModule,\r\n    AutoCompleteModule,\r\n    StoreModule.forRoot({ currencies: currencyReducer, portfolio: portfolioReducer }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "CryptoComponent"
                        },
                        {
                            "name": "CryptoPortfolioComponent"
                        },
                        {
                            "name": "CryptoSelectorComponent"
                        },
                        {
                            "name": "DownloadsComponent"
                        },
                        {
                            "name": "StatusIndicatorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-8b5d59a1a9a93ce91ce5c464b3aad9dbbf62a0a7a268ee4286ca2af3920e51a4607fb997dffeff703d95117fea075a53b660a417d40f2bf591a15a3afd513466",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DownloadsComponent } from './pages/files/files.component'\nimport { CryptoComponent } from './pages/crypto/crypto.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DownloadsComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'crypto',\n    component: CryptoComponent,\n    data: {\n      title: 'R4 | Error'\n    },\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "CurrenciesApiActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/currencies.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createActionGroup({\r\n  source: 'Cryptocurrency API',\r\n  events: {'Retrieved currencies': props<{ currencies: ReadonlyArray<Currency> }>()},\r\n})"
            },
            {
                "name": "CurrencyActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/currencies.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createActionGroup({\r\n  source: 'Currencies',\r\n  events: {\r\n    'Add Currency': props<{ currencyId: string }>(),\r\n    'Remove Currency': props<{ currencyId: string }>(),\r\n  },\r\n})"
            },
            {
                "name": "currencyReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/currencies.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(CurrenciesApiActions.retrievedCurrencies, (_state, { currencies }) => currencies)\r\n)"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "Full",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/currencies.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ReadonlyArray<Currency>",
                "defaultValue": "[]"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/portfolio.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ReadonlyArray<string>",
                "defaultValue": "[]"
            },
            {
                "name": "Partial",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "portfolioReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/portfolio.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(CurrencyActions.removeCurrency, (state, { currencyId }) =>\r\n    state.filter((id) => id !== currencyId)\r\n  ),\r\n  on(CurrencyActions.addCurrency, (state, { currencyId }) => {\r\n    if (state.indexOf(currencyId) > -1) return state;\r\n\r\n    return [...state, currencyId];\r\n  })\r\n)"
            },
            {
                "name": "selectCurrencies",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/currencies.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<ReadonlyArray<Currency>>('currencies')"
            },
            {
                "name": "selectCurrencyPortfolio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/currencies.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectCurrencies,\r\n  selectPortfolioState,\r\n  (currencies, portfolio) => {\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    return portfolio.map((id) => currencies.find((currency) => currency.id === id)!);\r\n  }\r\n)"
            },
            {
                "name": "selectPortfolioState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/currencies.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<ReadonlyArray<string>>('portfolio')"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxComponent>",
                "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "FileStatus",
                "childs": [
                    {
                        "name": "Scheduled",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "scheduled"
                    },
                    {
                        "name": "Available",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "available"
                    },
                    {
                        "name": "Unknown",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "unknown"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/interfaces/file.ts"
            },
            {
                "name": "MultiCheckboxState",
                "childs": [
                    {
                        "name": "Empty",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "empty"
                    },
                    {
                        "name": "Disabled",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "disabled"
                    },
                    {
                        "name": "Full",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "full"
                    },
                    {
                        "name": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "partial"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/components/checkbox/checkbox.model.ts"
            }
        ],
        "groupedVariables": {
            "src/app/state/currencies.actions.ts": [
                {
                    "name": "CurrenciesApiActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/currencies.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createActionGroup({\r\n  source: 'Cryptocurrency API',\r\n  events: {'Retrieved currencies': props<{ currencies: ReadonlyArray<Currency> }>()},\r\n})"
                },
                {
                    "name": "CurrencyActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/currencies.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createActionGroup({\r\n  source: 'Currencies',\r\n  events: {\r\n    'Add Currency': props<{ currencyId: string }>(),\r\n    'Remove Currency': props<{ currencyId: string }>(),\r\n  },\r\n})"
                }
            ],
            "src/app/state/currencies.reducer.ts": [
                {
                    "name": "currencyReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/currencies.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(CurrenciesApiActions.retrievedCurrencies, (_state, { currencies }) => currencies)\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/currencies.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReadonlyArray<Currency>",
                    "defaultValue": "[]"
                }
            ],
            "src/app/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Full",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Partial",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/app/state/portfolio.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/portfolio.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReadonlyArray<string>",
                    "defaultValue": "[]"
                },
                {
                    "name": "portfolioReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/portfolio.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(CurrencyActions.removeCurrency, (state, { currencyId }) =>\r\n    state.filter((id) => id !== currencyId)\r\n  ),\r\n  on(CurrencyActions.addCurrency, (state, { currencyId }) => {\r\n    if (state.indexOf(currencyId) > -1) return state;\r\n\r\n    return [...state, currencyId];\r\n  })\r\n)"
                }
            ],
            "src/app/state/currencies.selectors.ts": [
                {
                    "name": "selectCurrencies",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/currencies.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<ReadonlyArray<Currency>>('currencies')"
                },
                {
                    "name": "selectCurrencyPortfolio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/currencies.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectCurrencies,\r\n  selectPortfolioState,\r\n  (currencies, portfolio) => {\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    return portfolio.map((id) => currencies.find((currency) => currency.id === id)!);\r\n  }\r\n)"
                },
                {
                    "name": "selectPortfolioState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/currencies.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<ReadonlyArray<string>>('portfolio')"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/interfaces/file.ts": [
                {
                    "name": "FileStatus",
                    "childs": [
                        {
                            "name": "Scheduled",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "scheduled"
                        },
                        {
                            "name": "Available",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "available"
                        },
                        {
                            "name": "Unknown",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "unknown"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/interfaces/file.ts"
                }
            ],
            "src/app/components/checkbox/checkbox.model.ts": [
                {
                    "name": "MultiCheckboxState",
                    "childs": [
                        {
                            "name": "Empty",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "empty"
                        },
                        {
                            "name": "Disabled",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "disabled"
                        },
                        {
                            "name": "Full",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "full"
                        },
                        {
                            "name": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "partial"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/components/checkbox/checkbox.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "DownloadsComponent",
                        "pathMatch": "full"
                    },
                    {
                        "path": "crypto",
                        "component": "CryptoComponent",
                        "data": {
                            "title": "R4|Error"
                        }
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Full",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Partial",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/status-indicator/status-indicator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatusIndicatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/currency.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Currency",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/data-response.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/file.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "File",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/crypto/crypto-portfolio/crypto-portfolio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CryptoPortfolioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/crypto/crypto-selector/crypto-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CryptoSelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/crypto/crypto.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CryptoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/files/files.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DownloadsComponent",
                "coveragePercent": 16,
                "coverageCount": "2/12",
                "status": "low"
            },
            {
                "filePath": "src/app/services/currency/currency.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CurrencyService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/files/files.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FilesService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/state/currencies.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CurrenciesApiActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/currencies.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CurrencyActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/currencies.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "currencyReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/currencies.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/currencies.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrencies",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/currencies.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrencyPortfolio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/currencies.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectPortfolioState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/portfolio.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/portfolio.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "portfolioReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}